=== modified file 'runtime/graphics.yaml'
--- runtime/graphics.yaml	2010-04-14 15:09:55 +0000
+++ runtime/graphics.yaml	2010-10-26 22:07:45 +0000
@@ -297,7 +297,7 @@
     SDL_FillRect(screen, &dstrect, color);
 
 - fragment: linedraw
-  includes: SDL.h
+  includes: [SDL.h, math.h]
   fragments: [screen]
   file: linedraw.c
 
@@ -321,8 +321,8 @@
 
 - name: Circle
   params: [i, i, i, i]
-  includes: [SDL.h, SDL_gfxPrimitives.h]
-  fragments: [screen]
+  defaults: [-1]
+  fragments: [linedraw]
   code: |
     Uint32 color;
     if (p4 < 0) {
@@ -330,7 +330,7 @@
     } else {
       color = SDL_MapRGB(screen->format, (p4 >> 16) && 0xff, (p4 >> 8) && 0xff, p4 && 0xff);
     }
-    filledCircleColor(screen, p1, p2, p3, color);
+    circledraw(p1, p2, p3, color);
 
 - fragment: basicfont
   file: font.c

=== modified file 'runtime/linedraw.c'
--- runtime/linedraw.c	2008-11-14 22:39:48 +0000
+++ runtime/linedraw.c	2010-10-26 23:00:45 +0000
@@ -58,3 +58,22 @@
 
 	SDL_UnlockSurface(screen);
 }
+
+static void circledraw(int x, int y, int r, Uint32 color) {
+	int i,j,r2;
+
+	SDL_LockSurface(screen);
+	for (i = x-r; i <= x+r; i++) {
+		putpixel(screen, i, y, color);
+	}
+	for (j = 1; j <= r; j++) {
+		r2 = sqrt(r*r - j*j + .5);
+		for (i = x-r2; i <= x+r2; i++) {
+                        putpixel(screen, i, y+j, color);
+ 		        putpixel(screen, i, y-j, color);
+		}
+		                        
+	}
+
+	SDL_UnlockSurface(screen);
+}

=== modified file 'runtime/link.yaml'
--- runtime/link.yaml	2008-08-09 18:18:41 +0000
+++ runtime/link.yaml	2010-10-26 21:44:24 +0000
@@ -6,10 +6,6 @@
   path: /usr/include/SDL
   lib: SDL_image
 
-- header: SDL_gfxPrimitives.h
-  path: /usr/include/SDL
-  lib: SDL_gfx
-
 - header: SDL_ttf.h
   path: /usr/include/SDL
   lib: SDL_ttf

